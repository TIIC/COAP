----------------------------------------------------------------------------
README file for UIPCC
----------------------------------------------------------------------------

Author: Jamie Zhu <jimzhu@GitHub><jmzhu AT cse.cuhk.edu.hk>
Author: Zibin Zheng, CUHK (for the initial Java implementation).
Last updated: 2014/03/26.

This package implements five baseline reliability prediction approaches, 
including UMEAN, IMEAN, UPCC, IPCC, UIPCC (a.k.a. WSRec). 

----------------------------------------------------------------------------
Reference and citation
----------------------------------------------------------------------------

Please refer to the following papers for the detailed descriptions of the 
implemented algorithms:

- Zibin Zheng, and Michael R. Lyu, "Collaborative Reliability Prediction of 
  Service-oriented Systems," in Proc. of the 32nd {ACM/IEEE} International 
  Conference on Software Engineering (ICSE'10), 2010, pp. 35-44.

- Zibin Zheng, and Michael R. Lyu, "Personalized Reliability Prediction of 
  Web Services", ACM Trans. Softw. Eng. Methodol., vol.22, no.2, pp.12-12, 
  2013.

IF YOU USE THIS PACKAGE IN PUBLISHED RESEARCH, PLEASE CITE THE ABOVE PAPERS. 
THANKS!

----------------------------------------------------------------------------
Dependencies
----------------------------------------------------------------------------

- Python 2.7 (https://www.python.org)
- Cython 0.20.1 (http://cython.org)
- numpy 1.8.1 (http://www.scipy.org)
- scipy 0.13.3 (http://www.scipy.org)

The implementations are based on a combination of Python and C++ programming 
languages, in order to achieve both speed and simplicity. To do so, Cython is 
used. The core algorithms are implemented using C++, and we obtain a large 
speedup than pure Python implementation. You can refer to the README.md of 
WSRec repository for instructions of installing Cython. But you do not need 
it if you only want to reproduce the experimental results by executing the 
scripts that I have provided (You may even not need any execution because 
we have also provided most of the results). Cython is only required when you 
modify the c++ source files and want to re-compile them. 

It is worth noting that our implementation is also based on numpy and scipy 
packages, so you would also need to install these packages first.

----------------------------------------------------------------------------
Contents of this package
----------------------------------------------------------------------------

UIPCC/
  - run_rel.py                  - script file for running the experiments on 
                                  reliability QoS data
  - run_rt.py                   - script file for running the experiments on 
                                  response-time QoS data 
  - setup.py                    - setup script file for build c++ modules
  - readme.txt                  - descriptions of this package 
  - src/                        - directory of the source files
      - dataloader.py           - a function to load the dataset (with 
                                  preprocessing)
      - utilities.py            - a script containing a bag of useful utilities
      - evaluator.py            - control execution and results collection of the 
                                  specific algorithm
      - core.so                 - the external module built from C++ 
                                  implementations 
      - core/                   - directory of c++ implementation 
          - UIPCC.h             - header file
          - UIPCC.cpp           - source file
          - core.pyx            - a python wrapper written in Cython for C++ 
                                  functions 
          - core.cpp            - This file is automatically generated by Cython 
                                  for building core.so
  - result/                     - directory for storing evaluation results
                                  available metrics: (MAE, NMAE, RMSE, MRE, NPRE)
      - UMEAN/                  - the average results for UMEAN approach
      - IMEAN/                  - the average results for IMEAN approach
      - UPCC/                   - the average results for UPCC approach		  
      - IPCC/                   - the average results for IPCC approach		  
      - UIPCC/                  - the average results for UIPCC approach
          - avg_relResult_0.04.txt   - the average result under matrix density = 4%
		  - [...]                    - other results		  

----------------------------------------------------------------------------
Usage of this package
----------------------------------------------------------------------------

For ease of reproducing and compare with other approaches, we provide the 
detailed experimental results with five metrics (MAE, NMAE, RMSE), 
under the "result/" directory, after running the above five QoS prediction 
approaches on the dataset. E.g.,"avg_relResult_0.04.txt" records the evaluation 
results under matrix density = 4%. In particular, each experiment is run for 
20 times and the average result (including std value) is reported. These results 
can be directly used for your research work.

On the other hand, if you want to reproduce our experiments, you can run the 
program with our provided Python scripts "run_rel.py" and "run_rt.py". You can 
also turn on the "parallelMode" in the config area for speedup if you use a 
multi-core computer.

>> python run_rel.py
>> python run_rt.py

Make sure the external module "core.so" exists. If not, you can build it by 
the follow command. Note that whereas our code is executable to different 
platforms, we has only tested the current version on Linux.

>> python setup.py build_ext --inplace

----------------------------------------------------------------------------
Issues
----------------------------------------------------------------------------

In case of questions or problems, please do not hesitate to report to our 
issue page (https://github.com/WS-DREAM/COAP/issues). We will help ASAP. 
In addition, we will appreciate any contribution to refine and optimize this 
package.

----------------------------------------------------------------------------
Copyright
----------------------------------------------------------------------------

Copyright (c) WS-DREAM@GitHub, CUHK.

Permission is granted for anyone to copy, use, modify, or distribute this 
program and accompanying programs and documents for any purpose, provided 
this copyright notice is retained and prominently displayed, along with a 
note saying that the original programs are available from our web page 
(https://wsdream.github.io). The program is provided as-is, and there are 
no guarantees that it fits your purposes or that it is bug-free. All use 
of these programs is entirely at the user's own risk. For any enquiries, 
please feel free to contact Jamie Zhu <jmzhu AT cse.cuhk.edu.hk>.

